
package genconfig

configuration conf {
	@Runlevel(0) include embox.arch.system(core_freq=216000000)
	@Runlevel(0) include embox.arch.arm.cortexm3.bundle
	include platform.stm32.h7.nucleo_h745zi_q.bsp

	/* Can be enabled after SD card will be fixed. Currently it uses DMA
	 * and may become broken. */
	/*
	@Runlevel(0) include embox.arch.arm.armmlib.armv7m_cpu_cache(
		log_level=4,
		sram_nocache_section_size=0x4000,
		nocache_region0_addr=0x60000000, nocache_region0_size=0x00100000
	)
	*/
	include embox.arch.arm.vfork

	@Runlevel(0) include embox.kernel.stack(stack_size=8192,alignment=4)

	/* Enable FPU */
	@Runlevel(0) include embox.arch.arm.fpu.cortex_m7_fp
	@Runlevel(0) include embox.arch.arm.fpu.fpv5(log_level=3)
	/* Correctly works only with -O2 */
	@Runlevel(2) include embox.test.math.fpu_context_consistency_test

	@Runlevel(0) include embox.arch.arm.armmlib.interrupt
	@Runlevel(0) include embox.arch.arm.armmlib.exception_entry(irq_stack_size=1024)
	@Runlevel(0) include embox.arch.arm.armmlib.lthread_own_stack(stack_size=1024)

	@Runlevel(1) include embox.driver.interrupt.cortexm_nvic
	@Runlevel(1) include embox.driver.clock.cortexm_systick
	include embox.kernel.time.jiffies(cs_name="cortexm_systick")
	@Runlevel(1) include embox.driver.serial.stm_usart_h7(baud_rate=115200, usartx=3)
	@Runlevel(1) include embox.driver.diag(impl="embox__driver__serial__stm_usart_h7")
	//@Runlevel(1) include embox.driver.serial.stm_ttyS1(baud_rate=115200, usartx=6)
	@Runlevel(1) include embox.driver.serial.stm_ttyS0(baud_rate=115200, usartx=3)

	//@Runlevel(2) include embox.driver.net.stm32h7cube_eth
	@Runlevel(2) include embox.driver.net.loopback

	@Runlevel(2) include embox.test.kernel.thread.thread_test
	@Runlevel(2) include embox.test.math.math_test

	include embox.kernel.task.multi
	include embox.kernel.task.resource.idesc_table(idesc_table_size=32)
	include embox.kernel.task.resource.sig_table(sig_table_size=20)
	include embox.kernel.task.resource.env(env_per_task=4,env_str_len=64)

	include embox.kernel.thread.thread_local_none
	include embox.kernel.thread.thread_cancel_disable
	include embox.kernel.thread.signal.siginfoq(siginfo_pool_sz=8)
	include embox.kernel.timer.sleep
	include embox.net.skbuff(amount_skb=10)
	include embox.net.skbuff_data(amount_skb_data=10)
	include embox.net.sock_noxattr
	include embox.net.tcp
	include embox.net.tcp_sock
	include embox.net.udp
	include embox.net.udp_sock
	include embox.kernel.sched.sched
	include embox.kernel.sched.idle_light

	include embox.kernel.lthread.lthread
	include embox.kernel.thread.core(thread_pool_size=4, thread_stack_size=4000)

	/* tty requires */
	include embox.kernel.thread.mutex
	include embox.driver.tty.tty(rx_buff_sz=16, io_buff_sz=16)
	include embox.driver.tty.task_breaking_disable

	@Runlevel(2) include embox.cmd.msleep
	@Runlevel(2) include embox.cmd.sh.tish(builtin_commands = "cd export exit logout httpd")
	//include embox.init.setup_tty_diag
	//@Runlevel(3) include embox.init.start_script(shell_name="tish", tty_dev="ttyS0", shell_start=1, stop_on_error=true)
	include embox.init.system_start_service(log_level=3, tty_dev="ttyS0")

	include embox.cmd.mem
	include embox.cmd.goto
	include embox.cmd.net.tftp
	//include embox.cmd.qspi_loader
	include embox.cmd.service
	include embox.cmd.fs.ls
	include embox.cmd.fs.cat
	include embox.cmd.fs.mount
	include embox.cmd.net.netmanager
	include embox.cmd.net.ifconfig
	include embox.cmd.net.route
	include embox.cmd.net.ping
	include embox.cmd.net.telnetd
	include embox.cmd.net.httpd(use_real_cmd=true)
	include embox.cmd.net.httpd_cgi
	include embox.service.http_admin
	include embox.demo.website

	include embox.compat.posix.proc.vfork_exchanged
	include embox.compat.posix.proc.exec_exchanged

	include embox.cmd.testing.block_dev_test

	include embox.util.hashtable
	include embox.cmd.help
	include embox.cmd.sys.version
	include embox.util.log
	include embox.kernel.critical
	include embox.kernel.irq_static
	include embox.mem.pool_adapter

	include embox.util.LibUtil
	/*include embox.framework.embuild_light*/
	include embox.framework.LibFramework
	include embox.arch.arm.libarch
	include embox.compat.libc.stdio.print(support_floating=0)

	include embox.mem.heap_bm
	include embox.mem.static_heap(heap_size=0x2000)
	include embox.mem.bitmask(page_size=64)

	include embox.fs.driver.initfs_dvfs
	include embox.fs.driver.devfs_dvfs
	include embox.fs.rootfs_dvfs(fstype="initfs")
	include embox.fs.driver.fat_dvfs

	include embox.driver.char_dev

	include embox.fs.dvfs.core(inode_pool_size=16, dentry_pool_size=16, inode_pool_size=16)
	include embox.compat.posix.fs.all_dvfs
	include embox.fs.syslib.perm_stub
	include embox.driver.block_dev
}
