diff -aur opencv-4.5.2/modules/core/include/opencv2/core/utils/filesystem.private.hpp ../build/extbld/third_party/lib/opencv/build/opencv-4.5.2/modules/core/include/opencv2/core/utils/filesystem.private.hpp
--- opencv-4.5.2/modules/core/include/opencv2/core/utils/filesystem.private.hpp	2021-04-02 14:23:54.000000000 +0300
+++ ../build/extbld/third_party/lib/opencv/build/opencv-4.5.2/modules/core/include/opencv2/core/utils/filesystem.private.hpp	2021-04-15 17:35:04.680568744 +0300
@@ -12,7 +12,8 @@
 #  elif defined WINRT || defined _WIN32_WCE
      /* not supported */
 #  elif defined __ANDROID__ || defined __linux__ || defined _WIN32 || \
-        defined __FreeBSD__ || defined __bsdi__ || defined __HAIKU__
+        defined __FreeBSD__ || defined __bsdi__ || defined __HAIKU__ || \
+        defined __EMBOX__
 #      define OPENCV_HAVE_FILESYSTEM_SUPPORT 1
 #  elif defined(__APPLE__)
 #    include <TargetConditionals.h>
diff -aur opencv-4.5.2/modules/core/src/parallel.cpp ../build/extbld/third_party/lib/opencv/build/opencv-4.5.2/modules/core/src/parallel.cpp
--- opencv-4.5.2/modules/core/src/parallel.cpp	2021-04-02 14:23:54.000000000 +0300
+++ ../build/extbld/third_party/lib/opencv/build/opencv-4.5.2/modules/core/src/parallel.cpp	2021-04-15 17:18:03.150852664 +0300
@@ -58,7 +58,7 @@
 
 #if defined __linux__ || defined __APPLE__ || defined __GLIBC__ \
     || defined __HAIKU__ || defined __EMSCRIPTEN__ || defined __FreeBSD__ \
-    || defined __OpenBSD__
+    || defined __OpenBSD__ || defined __EMBOX__
     #include <unistd.h>
     #include <stdio.h>
     #include <sys/types.h>
diff -aur ./opencv-4.5.2/modules/core/src/system.cpp ../build/extbld/third_party/lib/opencv/build/opencv-4.5.2/modules/core/src/system.cpp
--- ./opencv-4.5.2/modules/core/src/system.cpp	2021-04-02 14:23:54.000000000 +0300
+++ ../build/extbld/third_party/lib/opencv/build/opencv-4.5.2/modules/core/src/system.cpp	2025-04-11 15:40:18.955136608 +0300
@@ -229,7 +229,7 @@
 #include "omp.h"
 #endif
 
-#if defined __linux__ || defined __APPLE__ || defined __EMSCRIPTEN__ || defined __FreeBSD__ || defined __GLIBC__ || defined __HAIKU__
+#if defined __linux__ || defined __APPLE__ || defined __EMSCRIPTEN__ || defined __FreeBSD__ || defined __GLIBC__ || defined __HAIKU__ || defined __EMBOX__
 #include <unistd.h>
 #include <stdio.h>
 #include <sys/types.h>
@@ -530,11 +530,11 @@
         }
     #endif // CV_CPUID_X86
 
-    #if defined __ANDROID__ || defined __linux__
+    #if defined __ANDROID__ || defined __linux__ || defined __EMBOX__
     #ifdef __aarch64__
         have[CV_CPU_NEON] = true;
         have[CV_CPU_FP16] = true;
-    #elif defined __arm__ && defined __ANDROID__
+    #elif defined __arm__ && (defined __ANDROID__ || defined __EMBOX__)
       #if defined HAVE_CPUFEATURES
         CV_LOG_INFO(NULL, "calling android_getCpuFeatures() ...");
         uint64_t features = android_getCpuFeatures();
@@ -806,7 +806,7 @@
     LARGE_INTEGER counter;
     QueryPerformanceCounter( &counter );
     return (int64)counter.QuadPart;
-#elif defined __linux || defined __linux__
+#elif defined __linux || defined __linux__ || defined __EMBOX__
     struct timespec tp;
     clock_gettime(CLOCK_MONOTONIC, &tp);
     return (int64)tp.tv_sec*1000000000 + tp.tv_nsec;
diff -aur opencv-4.5.2/modules/core/src/utils/filesystem.cpp ../build/extbld/third_party/lib/opencv/build/opencv-4.5.2/modules/core/src/utils/filesystem.cpp
--- opencv-4.5.2/modules/core/src/utils/filesystem.cpp	2021-04-15 17:38:18.000565557 +0300
+++ ../build/extbld/third_party/lib/opencv/build/opencv-4.5.2/modules/core/src/utils/filesystem.cpp	2021-04-15 17:36:13.092558269 +0300
@@ -34,7 +34,7 @@
 #include <errno.h>
 #include <io.h>
 #include <stdio.h>
-#elif defined __linux__ || defined __APPLE__ || defined __HAIKU__ || defined __FreeBSD__
+#elif defined __linux__ || defined __APPLE__ || defined __HAIKU__ || defined __FreeBSD__ || defined __EMBOX__
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <fcntl.h>
@@ -195,7 +195,7 @@
     sz = GetCurrentDirectoryA((DWORD)buf.size(), buf.data());
     return cv::String(buf.data(), (size_t)sz);
 #endif
-#elif defined __linux__ || defined __APPLE__ || defined __HAIKU__ || defined __FreeBSD__
+#elif defined __linux__ || defined __APPLE__ || defined __HAIKU__ || defined __FreeBSD__ || defined __EMBOX__
     for(;;)
     {
         char* p = ::getcwd(buf.data(), buf.size());
@@ -229,7 +229,7 @@
 #else
     int result = _mkdir(path.c_str());
 #endif
-#elif defined __linux__ || defined __APPLE__ || defined __HAIKU__ || defined __FreeBSD__
+#elif defined __linux__ || defined __APPLE__ || defined __HAIKU__ || defined __FreeBSD__ || defined __EMBOX__
     int result = mkdir(path.c_str(), 0777);
 #else
     int result = -1;
@@ -344,7 +344,7 @@
     Impl& operator=(const Impl&); // disabled
 };
 
-#elif defined __linux__ || defined __APPLE__ || defined __HAIKU__ || defined __FreeBSD__
+#elif defined __linux__ || defined __APPLE__ || defined __HAIKU__ || defined __FreeBSD__ || defined __EMBOX__
 
 struct FileLock::Impl
 {
