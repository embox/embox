package third_party.boost

@Build(script="$(EXTERNAL_MAKE)")
@BuildArtifactPath(cppflags="-I$(abspath $(EXTERNAL_BUILD_DIR))/third_party/boost/libs/install/include")
@BuildDepends(embox.lib.libsupcxx)
@BuildDepends(embox.lib.libstdcxx)
static module libs {
	option string boost_version="1_65_0"

	// @AddPrefix("^BUILD/extbld/third_party/boost/libs/install/lib")
	// source  "libboost_atomic.a", 
	// 		"libboost_thread.a",
	// 		"libboost_filesystem.a"

	@AddPrefix("^BUILD/extbld/third_party/boost/libs/install/lib")
	source  "libboost_chrono.a",
			"libboost_context.a",
			"libboost_date_time.a",
			"libboost_exception.a",
			"libboost_program_options.a",
			"libboost_random.a",
			"libboost_system.a",
			"libboost_timer.a",
			"libboost_system.a"

	@NoRuntime depends embox.compat.posix.util.environ
	@NoRuntime depends embox.compat.libc.all
	@NoRuntime depends embox.lib.libstdcxx
	@NoRuntime depends embox.compat.posix.pthread_key
}

@AutoCmd
@Cmd(name="boost_demo_time_math",
	help="example for BOOST date_time",
	man="")
@BuildDepends(third_party.boost.libs)
@Build(stage=2,script="true")
module boost_demo_time_math {
	@AddPrefix("^BUILD/extbld/third_party/boost/libs/install/examples")
	source "time_math.o"

	@NoRuntime depends third_party.boost.libs
}
