package third_party.bsp.stmf7cube

@DefaultImpl(third_party.bsp.stm32746g_cube.core)
abstract module core extends third_party.bsp.st_bsp_api {
}

@DefaultImpl(third_party.bsp.stm32746g_cube.stm32f7_discovery_bsp)
abstract module stm32f7_discovery_bsp {
}

@DefaultImpl(third_party.bsp.stm32746g_cube.stm32f7_discovery_components)
abstract module stm32f7_discovery_components {
}

@BuildDepends(third_party.bsp.st_bsp_api)
module arch extends embox.arch.arch {
	source "arch.c"

	depends system_init
}

@DefaultImpl(third_party.bsp.stm32746g_cube.system_init)
abstract module system_init {
}

@BuildDepends(third_party.bsp.st_bsp_api)
module cmsis extends embox.arch.arm.cmsis {
	source "cmsis_impl.h"
}

@Build(stage=1,script="true")
@BuildDepends(third_party.bsp.st_bsp_api)
module sdram {
	/* If true, swap SDRAM from 0xc0000000 to 0x60000000 */
	option boolean fmc_swap = false

	source "sdram_init.c"

	depends embox.kernel.time.jiffies
	depends embox.kernel.sched.sched
	depends embox.kernel.time.timekeeper
	depends system_init
	depends stm32f7_discovery_bsp
	depends embox.driver.interrupt.cortexm_nvic
}
