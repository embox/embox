
package genconfig

configuration conf {
	include embox.arch.system(core_freq=180000000)
	include embox.arch.arm.cortexm3.bundle
	include embox.arch.arm.armmlib.cpu_idle
	include embox.arch.arm.libarch
	include embox.arch.arm.vfork
	include embox.arch.arm.cxxabi

	/* Enable FPU */
	include embox.arch.arm.fpu.cortex_m4_fp
	@Runlevel(0) include embox.arch.arm.fpu.fpv5(log_level="LOG_INFO")

	include platform.stm32.platform_init
	include platform.stm32.platform_shutdown
	include platform.stm32.f4.nucleo_f429zi.bsp

	include embox.kernel.stack(stack_size=3072,alignment=4)

	@Runlevel(1) include embox.driver.interrupt.cortexm_nvic
	@Runlevel(1) include embox.driver.clock.cortexm_systick
	include embox.kernel.time.jiffies(cs_name="cortexm_systick")

	@Runlevel(1) include embox.driver.serial.stm_usart_f4
	@Runlevel(1) include embox.driver.serial.stm_diag(baud_rate=115200, usartx=3)
	@Runlevel(1) include embox.driver.diag(impl="embox__driver__serial__stm_diag")
	@Runlevel(1) include embox.driver.serial.stm_ttyS1(baud_rate=57600, usartx=6)
	@Runlevel(1) include embox.driver.serial.stm_ttyS0(baud_rate=115200, usartx=3)

	include embox.driver.gpio.stm32cube_gpio

	@Runlevel(1) include embox.driver.input.button.stm32cube_button(pin_port=2, pin_num=13)

	include embox.driver.flash.flash_cache_block
	include embox.driver.flash.stm32f4cube(flash_size=0xC000)
	include embox.driver.flash.flash_fs

	include embox.driver.i2c.stm32cube_i2c
	include embox.driver.i2c.stm32cube_i2c1

	include embox.driver.spi.core
	include embox.driver.spi.stm32cube_spi(log_level="LOG_NONE")
	include embox.driver.spi.stm32cube_spi1(log_level="LOG_NONE") /* Note: SPI1 overlaps some USART2 pins */
	// include embox.driver.spi.stm32cube_spi2(log_level="LOG_NONE") /* Note: SPI2 overlaps some Ethernet pins */

	@Runlevel(2) include embox.driver.net.stm32f4cube_eth
	@Runlevel(2) include embox.driver.net.loopback

	@Runlevel(1) include embox.driver.usb.core(usb_max_hcd=1, usb_max_dev=2, usb_max_hub=1,
					usb_max_req=4, urb_alignment=4)
	@Runlevel(1) include embox.driver.usb.class.mass_storage
	@Runlevel(1) include embox.driver.usb.class.ccid(log_level="LOG_DEBUG")
	@Runlevel(1) include embox.driver.usb.class.hid
	@Runlevel(1) include embox.driver.usb.hub
	@Runlevel(2) include embox.driver.usb.stm32_hc.stm32f4_hc

	include embox.driver.virtual.null
	include embox.driver.virtual.zero

	include embox.driver.block_dev(dev_quantity=4)

	include embox.kernel.critical
	include embox.kernel.irq_static
	include embox.kernel.irq_stack_protection

	include embox.kernel.task.multi
	include embox.kernel.task.resource.idesc_table(idesc_table_size=16)
	include embox.kernel.task.resource.sig_table(sig_table_size=20)
	include embox.kernel.task.resource.env(env_per_task=4,env_str_len=64)

	include embox.kernel.thread.thread_cancel_disable
	include embox.kernel.thread.signal.siginfoq(siginfo_pool_sz=4)
	include embox.kernel.timer.sleep
	include embox.kernel.sched.sched
	include embox.kernel.sched.idle_light
	include embox.kernel.lthread.lthread
	include embox.kernel.thread.core(thread_stack_size=4960,thread_pool_size=8)

	/* tty requires */
	include embox.kernel.thread.mutex
	include embox.driver.tty.tty(rx_buff_sz=16, io_buff_sz=16)
	include embox.driver.tty.task_breaking_disable

	include embox.net.skbuff(amount_skb=10)
	include embox.net.skbuff_data(amount_skb_data=10)
	include embox.net.sock_noxattr
	include embox.net.tcp
	include embox.net.tcp_sock

	@Runlevel(2) include embox.cmd.sh.tish(
		builtin_commands = "cd export exit logout httpd pin ls help version"
	)
	include embox.init.setup_tty_diag
	@Runlevel(3) include embox.init.start_script(shell_name="tish")

	include embox.cmd.service(services_count=2)
	include embox.cmd.help
	include embox.cmd.msleep
	include embox.cmd.sys.version
	include embox.cmd.sys.export

	include embox.cmd.fs.dd
	include embox.cmd.fs.cat
	include embox.cmd.fs.ls
	include embox.cmd.fs.rm
	include embox.cmd.fs.mount
	include embox.cmd.fs.umount
	include embox.cmd.fs.stat
	include embox.cmd.fs.echo
	// include embox.cmd.fs.touch
	// include embox.cmd.fs.mkdir
	include embox.cmd.fs.cp
	
	include embox.cmd.testing.input.input_test
	include embox.cmd.testing.ticker
	include embox.cmd.testing.blink

	include embox.cmd.net.ifconfig
	include embox.cmd.net.route
	include embox.cmd.net.ping
	include embox.cmd.net.netmanager

	include embox.compat.libc.math_openlibm
	include embox.compat.posix.proc.vfork_exchanged
	include embox.compat.posix.proc.exec_exchanged
	include embox.compat.posix.pthread_key
	include embox.compat.posix.time.time

	include embox.lib.libds
	include embox.framework.LibFramework
	include embox.compat.libc.stdio.print(support_floating=0)

	include embox.mem.pool_adapter

	include embox.mem.heap_bm
	include embox.mem.static_heap(heap_size=0x10000,section="")
	include embox.mem.bitmask(page_size=64)

	include embox.fs.driver.initfs_dvfs(file_quantity=32)
	include embox.fs.driver.devfs_dvfs
	include embox.fs.rootfs_dvfs(fstype="initfs")
	include embox.fs.driver.dfs
	include embox.fs.driver.fat_dvfs(log_level="LOG_ERR")
	include embox.fs.dvfs.core
	include embox.compat.posix.file_system_dvfs
	include embox.fs.syslib.perm_stub

	@Runlevel(2) include embox.lib.cxx.ConstructionSingleApp
	include embox.lib.cxx.DestructionStatic(table_size=1024)
	include third_party.gcc.gcc_build(gcc_version="14.2.0")
	include third_party.gcc.libstdcxx
	include third_party.gcc.libsupcxx
	
	// include third_party.lib.libgcc_toolchain
	// include third_party.lib.libstdcxx_toolchain
	// include embox.lib.cxx.libsupcxx_standalone

 	include embox.lib.leddrv_gpio

	include project.fourdiac.forte
}
