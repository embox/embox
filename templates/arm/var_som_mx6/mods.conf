package genconfig

configuration conf {
	@Runlevel(0) include embox.arch.system(core_freq=800000000)
	@Runlevel(0) include embox.arch.arm.imx.arch
	@Runlevel(0) include embox.arch.arm.armlib.static_excpt_table
	@Runlevel(0) include embox.arch.arm.cortexa8.bundle
	@Runlevel(0) include embox.kernel.cpu.bkl
	@Runlevel(0) include embox.kernel.cpu.cpudata
	@Runlevel(0) include embox.kernel.irq
	@Runlevel(0) include embox.arch.arm.stackframe
	include embox.arch.arm.vfork
	@Runlevel(0) include embox.driver.cache.pl310(base_addr=0x00A02000)

	include embox.arch.arm.fpu.vfp
	include embox.arch.arm.armlib.locore
	include embox.arch.arm.imx.cpuinfo

	@Runlevel(0) include embox.kernel.task.kernel_task
	@Runlevel(0) include embox.mem.phymem
	@Runlevel(0) include embox.arch.arm.mmu_small_page(domain_access=1)
	//@Runlevel(0) include embox.mem.vmem

	include embox.kernel.thread.core(thread_stack_size=0x200000)

	include embox.arch.arm.libarch

	@Runlevel(0) include embox.kernel.critical

	@Runlevel(0) include embox.driver.gpio.imx(log_level=0)
	@Runlevel(0) include embox.driver.interrupt.cortex_a9_gic(cpu_base_addr=0x00A00100,distributor_base_addr=0x00A01000,log_level=0)
	@Runlevel(0) include embox.kernel.stack(stack_size=0x200000)
	@Runlevel(0) include embox.driver.serial.imx_uart(num=0)
	@Runlevel(1) include embox.driver.diag(impl="embox__driver__serial__imx_uart")
	@Runlevel(0) include embox.driver.clock.cortexa9(periph_base_addr=0x00a00000,irq_num=29)

	@Runlevel(2) include embox.driver.net.fec(log_level=0, speed=1000)
	@Runlevel(2) include embox.driver.net.loopback

	/* videomode values are taken from imx6ul-var-dart.dtsi */
	@Runlevel(2) include embox.driver.gpu.ipu_v3(base_addr=0x02600000,log_level=0,xres=800,yres=480,upper_margin=15,hsync_len=48,vsync_len=3)
	@Runlevel(2) include embox.driver.gpu.ldb(log_level=0,data_width=24)


	include embox.fs.syslib.file_system_none
	include embox.fs.syslib.perm_stub
	include embox.compat.posix.fs.all_dvfs
	include embox.driver.char_dev

	include embox.fs.driver.devfs_dvfs
	include embox.fs.driver.initfs_dvfs
	@Runlevel(2) include embox.fs.rootfs_dvfs

	include embox.test.kernel.timer_test
	include embox.kernel.task.resource.errno

	include embox.mem.bitmask(page_size=1048576)
	include embox.lib.debug.whereami

	@Runlevel(2) include embox.cmd.sh.tish(prompt="%u@%h:%w%$", rich_prompt_support=1, builtin_commands="exit logout cd export mount umount")
	@Runlevel(3) include embox.init.start_script(shell_name="tish", tty_dev="ttyS0", shell_start=1, stop_on_error=true)

	@Runlevel(2) include embox.net.skbuff(amount_skb=4000)
	@Runlevel(2) include embox.net.skbuff_data(amount_skb_data=4000,data_size=1514,data_align=1,data_padto=1,ip_align=true)
	@Runlevel(2) include embox.net.skbuff_extra(amount_skb_extra=128,extra_size=10,extra_align=1,extra_padto=1)

	include embox.cmd.help
	include embox.cmd.mem
	include embox.cmd.service
	include embox.cmd.sys.env
	include embox.cmd.sys.export
	include embox.cmd.sys.shutdown

	include embox.cmd.fs.cat
	include embox.cmd.fs.ls
	include embox.cmd.testing.fb_direct_access

	include embox.cmd.net.ifconfig
	include embox.cmd.net.httpd
	include embox.cmd.net.ping
	include embox.cmd.net.route
	include embox.cmd.net.telnetd

	include embox.cmd.testing.memtest

	@Runlevel(2) include embox.mem.static_heap(heap_size=64000000)
	@Runlevel(2) include embox.mem.heap_bm(heap_size=32000000)

	include embox.compat.posix.passwd
	include embox.compat.libc.stdio.print(support_floating=0)

	include embox.driver.clk.ccm_imx6(log_level=4)

	@Runlevel(2) include embox.util.LibUtil
	@Runlevel(2) include embox.framework.LibFramework
	@Runlevel(2) include embox.compat.libc.all
	include embox.compat.libc.math_openlibm
	include embox.compat.libc.stdio.asprintf
	include embox.compat.posix.proc.atexit_stub
	include embox.compat.posix.fs.rewinddir_stub

	include embox.cmd.testing.fb_devfs_access
	include embox.cmd.testing.fb_direct_access
	include embox.compat.atomic.pseudo_atomic

	include embox.compat.libc.stdio.asprintf
	include embox.compat.posix.proc.atexit_stub
	include embox.compat.posix.fs.rewinddir_stub
}
